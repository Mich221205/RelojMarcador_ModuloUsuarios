@page
@model RelojMarcador_ModuloUsuarios.Pages.MarcasModel
@{
    ViewData["Title"] = "Realizar Marca";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Siempre Puntuales S.A. - Reloj Marcador</title>
    <link rel="icon" type="image/png" href="https://cdn-icons-png.flaticon.com/512/3176/3176366.png">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background: #f5f7fb;
        }

        .card {
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,.1);
        }

        .left-panel {
            background: #f0f4ff;
            border-radius: 15px 0 0 15px;
            padding: 40px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
        }

            .left-panel h2 {
                font-weight: bold;
                color: #0d6efd;
            }

        #reloj {
            font-size: 1.2rem;
            font-weight: bold;
            color: #0d6efd;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-light bg-white shadow-sm mb-4">
        <div class="container">
            <a class="navbar-brand d-flex align-items-center" href="#">
                <img src="https://cdn-icons-png.flaticon.com/512/3176/3176366.png" alt="Logo" width="40" class="me-2">
                <span class="fw-bold text-primary">Siempre Puntuales S.A.</span>
            </a>
            <span id="reloj"></span>
        </div>
    </nav>

    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-md-9 col-lg-8">
                <div class="card d-flex flex-column flex-md-row">
                    <!-- Panel izquierdo -->
                    <div class="left-panel col-md-5">
                        <img src="~/img/logo.jpg" alt="Logo Siempre Puntuales" width="100" class="mb-3">
                        <p>Control de asistencia<br>Marque su ingreso o salida</p>
                    </div>

                    <!-- Panel derecho -->
                    <div class="col-md-7 p-4">
                        <h4 class="mb-4">Realizar Marca</h4>

                        <!-- Mensaje del servidor -->
                        @if (!string.IsNullOrEmpty(Model.Mensaje))
                        {
                            <div class="alert alert-info">@Model.Mensaje</div>
                        }

                        <!-- Mensajes de validación dinámica -->
                        <div id="alertaError" class="alert alert-danger d-none" aria-live="polite"></div>
                        <div id="alertaOk" class="alert alert-success d-none" aria-live="polite"></div>

                        <form id="formMarca" method="post">
                            @Html.AntiForgeryToken()

                            <div class="mb-3">
                                <label for="usuario" class="form-label">Usuario</label>
                                <input asp-for="Identificacion" id="usuario" name="Identificacion"
                                       value="@Model.Identificacion"
                                       class="form-control" placeholder="Ingrese su identificación" />
                            </div>

                            <div class="mb-3">
                                <label for="clave" class="form-label">Contraseña</label>
                                <input asp-for="Contrasena" id="clave" name="Contrasena"
                                       value="@Model.Contrasena"
                                       type="password" class="form-control" placeholder="Ingrese su contraseña" />
                            </div>

                            <div class="mb-3">
                                <label for="area" class="form-label">Área</label>
                                <select asp-for="IdAreaSeleccionada" name="IdAreaSeleccionada"
                                        class="form-select" id="area" required>
                                    <option value="">Seleccione su área</option>
                                </select>
                            </div>

                            <div class="mb-3">
                                <label for="Detalle" class="form-label">Detalle (opcional)</label>
                                <textarea asp-for="Detalle" class="form-control" rows="2" maxlength="100">@Model.Detalle</textarea>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Tipo de Marca</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input"
                                           type="radio"
                                           id="entrada"
                                           name="TipoMarca"
                                           value="Entrada"
                                           @(Model.TipoMarca == "Entrada" ? "checked" : "") />
                                    <label class="form-check-label" for="entrada">Entrada</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input"
                                           type="radio"
                                           id="salida"
                                           name="TipoMarca"
                                           value="Salida"
                                           @(Model.TipoMarca == "Salida" ? "checked" : "") />
                                    <label class="form-check-label" for="salida">Salida</label>
                                </div>
                            </div>

                            <button type="submit" id="btnRegistrar" class="btn btn-primary w-100">
                                <span id="btnText">Registrar Marca</span>
                                <span id="btnSpinner" class="spinner-border spinner-border-sm d-none"></span>
                            </button>
                        </form>
                    </div><!-- /col-md-7 -->
                </div><!-- /card -->
            </div>
        </div>
    </div>

    <script>
        const inputUsuario = document.getElementById("usuario");
        const inputClave   = document.getElementById("clave");
        const selectArea   = document.getElementById("area");
        const alertaError  = document.getElementById("alertaError");
        const alertaOk     = document.getElementById("alertaOk");
        const form         = document.getElementById("formMarca");
        const btnText      = document.getElementById("btnText");
        const btnSpinner   = document.getElementById("btnSpinner");

        const getToken = () => document.querySelector('input[name="__RequestVerificationToken"]')?.value ?? "";

        let debounceTimer = null;
        const debounce = (fn, wait = 350) => {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(fn, wait);
        };

        async function validarYObtenerAreas() {
            const identificacion = inputUsuario.value.trim();
            const contrasena = inputClave.value.trim();

            if (!identificacion || !contrasena) return;

            try {
                let resp = await fetch("/Marcas?handler=Validar", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
                        "RequestVerificationToken": getToken()
                    },
                    body: new URLSearchParams({ identificacion, contrasena })
                });

                let data = await resp.json();

                if (!data.success) {
                    alertaError.classList.remove("d-none");
                    alertaError.innerText = data.message || "Credenciales inválidas";
                    alertaOk.classList.add("d-none");
                    selectArea.innerHTML = '<option value="">Seleccione su área</option>';
                    return;
                }

                alertaError.classList.add("d-none");
                alertaOk.classList.remove("d-none");
                alertaOk.innerText = "Credenciales válidas";

                selectArea.innerHTML = '<option value="">Seleccione su área</option>';
                data.areas.forEach(area => {
                    const option = document.createElement("option");
                    option.value = area.id;
                    option.textContent = area.nombre;
                    selectArea.appendChild(option);
                });

                if (data.areas.length === 1) {
                    selectArea.value = data.areas[0].id;
                }

            } catch (err) {
                alertaError.classList.remove("d-none");
                alertaError.innerText = "Error de conexión con el servidor";
                alertaOk.classList.add("d-none");
                selectArea.innerHTML = '<option value="">Seleccione su área</option>';
            }
        }

        inputUsuario.addEventListener("input", () => debounce(validarYObtenerAreas));
        inputClave.addEventListener("input", () => debounce(validarYObtenerAreas));
        inputUsuario.addEventListener("blur", validarYObtenerAreas);
        inputClave.addEventListener("blur", validarYObtenerAreas);

        form.addEventListener("submit", () => {
            btnSpinner.classList.remove("d-none");
            btnText.textContent = "Registrando...";
        });

        // Reloj en vivo
        function actualizarReloj() {
            const ahora = new Date();
            const hora = ahora.toLocaleTimeString("es-ES", { hour12: false });
            document.getElementById("reloj").textContent = hora;
        }
        setInterval(actualizarReloj, 1000);
        actualizarReloj();
    </script>
</body>
</html>
